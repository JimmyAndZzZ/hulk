package com.jimmy.hulk.protocol.reponse.show;

import cn.hutool.core.util.StrUtil;
import com.google.common.collect.Maps;
import com.jimmy.hulk.protocol.packages.FieldPacket;
import com.jimmy.hulk.protocol.packages.RowDataPacket;
import com.jimmy.hulk.protocol.utils.PacketUtil;
import com.jimmy.hulk.protocol.utils.StringUtil;
import com.jimmy.hulk.protocol.utils.constant.Fields;
import com.jimmy.hulk.protocol.core.Context;
import com.jimmy.hulk.protocol.packages.EOFPacket;
import com.jimmy.hulk.protocol.packages.ResultSetHeaderPacket;
import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandlerContext;

import java.util.Map;

public class ShowStatusResponse {

    private static final int FIELD_COUNT = 2;

    private static final EOFPacket EOF = new EOFPacket();

    private static final FieldPacket[] FIELDS = new FieldPacket[FIELD_COUNT];

    private static final ResultSetHeaderPacket HEADER = PacketUtil.getHeader(FIELD_COUNT);

    private static final Map<String, Object> VARIABLE_MAP = Maps.newHashMap();

    static {
        int i = 0;
        byte packetId = 0;
        HEADER.packetId = ++packetId;

        FIELDS[i] = PacketUtil.getField("Variable_name", Fields.FIELD_TYPE_VAR_STRING);
        FIELDS[i++].packetId = ++packetId;

        FIELDS[i] = PacketUtil.getField("Value", Fields.FIELD_TYPE_VAR_STRING);
        FIELDS[i++].packetId = ++packetId;

        EOF.packetId = ++packetId;

        VARIABLE_MAP.put("Aborted_clients", "4720542");
        VARIABLE_MAP.put("Aborted_connects", "112679");
        VARIABLE_MAP.put("Binlog_cache_disk_use", "2113648");
        VARIABLE_MAP.put("Binlog_cache_use", "183769461");
        VARIABLE_MAP.put("Binlog_stmt_cache_disk_use", "0");
        VARIABLE_MAP.put("Binlog_stmt_cache_use", "487914");
        VARIABLE_MAP.put("Bytes_received", "1421");
        VARIABLE_MAP.put("Bytes_sent", "1477");
        VARIABLE_MAP.put("Com_admin_commands", "1");
        VARIABLE_MAP.put("Com_assign_to_keycache", "0");
        VARIABLE_MAP.put("Com_alter_db", "0");
        VARIABLE_MAP.put("Com_alter_db_upgrade", "0");
        VARIABLE_MAP.put("Com_alter_event", "0");
        VARIABLE_MAP.put("Com_alter_function", "0");
        VARIABLE_MAP.put("Com_alter_instance", "0");
        VARIABLE_MAP.put("Com_alter_procedure", "0");
        VARIABLE_MAP.put("Com_alter_server", "0");
        VARIABLE_MAP.put("Com_alter_table", "0");
        VARIABLE_MAP.put("Com_alter_tablespace", "0");
        VARIABLE_MAP.put("Com_alter_user", "0");
        VARIABLE_MAP.put("Com_analyze", "0");
        VARIABLE_MAP.put("Com_begin", "0");
        VARIABLE_MAP.put("Com_binlog", "0");
        VARIABLE_MAP.put("Com_call_procedure", "0");
        VARIABLE_MAP.put("Com_change_db", "0");
        VARIABLE_MAP.put("Com_change_master", "0");
        VARIABLE_MAP.put("Com_change_repl_filter", "0");
        VARIABLE_MAP.put("Com_check", "0");
        VARIABLE_MAP.put("Com_checksum", "0");
        VARIABLE_MAP.put("Com_commit", "0");
        VARIABLE_MAP.put("Com_create_db", "0");
        VARIABLE_MAP.put("Com_create_event", "0");
        VARIABLE_MAP.put("Com_create_function", "0");
        VARIABLE_MAP.put("Com_create_index", "0");
        VARIABLE_MAP.put("Com_create_procedure", "0");
        VARIABLE_MAP.put("Com_create_server", "0");
        VARIABLE_MAP.put("Com_create_table", "0");
        VARIABLE_MAP.put("Com_create_trigger", "0");
        VARIABLE_MAP.put("Com_create_udf", "0");
        VARIABLE_MAP.put("Com_create_user", "0");
        VARIABLE_MAP.put("Com_create_view", "0");
        VARIABLE_MAP.put("Com_dealloc_sql", "0");
        VARIABLE_MAP.put("Com_delete", "0");
        VARIABLE_MAP.put("Com_delete_multi", "0");
        VARIABLE_MAP.put("Com_do", "0");
        VARIABLE_MAP.put("Com_drop_db", "0");
        VARIABLE_MAP.put("Com_drop_event", "0");
        VARIABLE_MAP.put("Com_drop_function", "0");
        VARIABLE_MAP.put("Com_drop_index", "0");
        VARIABLE_MAP.put("Com_drop_procedure", "0");
        VARIABLE_MAP.put("Com_drop_server", "0");
        VARIABLE_MAP.put("Com_drop_table", "0");
        VARIABLE_MAP.put("Com_drop_trigger", "0");
        VARIABLE_MAP.put("Com_drop_user", "0");
        VARIABLE_MAP.put("Com_drop_view", "0");
        VARIABLE_MAP.put("Com_empty_query", "0");
        VARIABLE_MAP.put("Com_execute_sql", "0");
        VARIABLE_MAP.put("Com_explain_other", "0");
        VARIABLE_MAP.put("Com_flush", "0");
        VARIABLE_MAP.put("Com_get_diagnostics", "0");
        VARIABLE_MAP.put("Com_grant", "0");
        VARIABLE_MAP.put("Com_ha_close", "0");
        VARIABLE_MAP.put("Com_ha_open", "0");
        VARIABLE_MAP.put("Com_ha_read", "0");
        VARIABLE_MAP.put("Com_help", "0");
        VARIABLE_MAP.put("Com_insert", "0");
        VARIABLE_MAP.put("Com_insert_select", "0");
        VARIABLE_MAP.put("Com_install_plugin", "0");
        VARIABLE_MAP.put("Com_kill", "0");
        VARIABLE_MAP.put("Com_load", "0");
        VARIABLE_MAP.put("Com_lock_tables", "0");
        VARIABLE_MAP.put("Com_optimize", "0");
        VARIABLE_MAP.put("Com_preload_keys", "0");
        VARIABLE_MAP.put("Com_prepare_sql", "0");
        VARIABLE_MAP.put("Com_purge", "0");
        VARIABLE_MAP.put("Com_purge_before_date", "0");
        VARIABLE_MAP.put("Com_release_savepoint", "0");
        VARIABLE_MAP.put("Com_rename_table", "0");
        VARIABLE_MAP.put("Com_rename_user", "0");
        VARIABLE_MAP.put("Com_repair", "0");
        VARIABLE_MAP.put("Com_replace", "0");
        VARIABLE_MAP.put("Com_replace_select", "0");
        VARIABLE_MAP.put("Com_reset", "0");
        VARIABLE_MAP.put("Com_resignal", "0");
        VARIABLE_MAP.put("Com_revoke", "0");
        VARIABLE_MAP.put("Com_revoke_all", "0");
        VARIABLE_MAP.put("Com_rollback", "0");
        VARIABLE_MAP.put("Com_rollback_to_savepoint", "0");
        VARIABLE_MAP.put("Com_savepoint", "0");
        VARIABLE_MAP.put("Com_select", "3");
        VARIABLE_MAP.put("Com_set_option", "3");
        VARIABLE_MAP.put("Com_signal", "0");
        VARIABLE_MAP.put("Com_show_binlog_events", "0");
        VARIABLE_MAP.put("Com_show_binlogs", "0");
        VARIABLE_MAP.put("Com_show_charsets", "0");
        VARIABLE_MAP.put("Com_show_collations", "0");
        VARIABLE_MAP.put("Com_show_create_db", "0");
        VARIABLE_MAP.put("Com_show_create_event", "0");
        VARIABLE_MAP.put("Com_show_create_func", "0");
        VARIABLE_MAP.put("Com_show_create_proc", "0");
        VARIABLE_MAP.put("Com_show_create_table", "0");
        VARIABLE_MAP.put("Com_show_create_trigger", "0");
        VARIABLE_MAP.put("Com_show_databases", "0");
        VARIABLE_MAP.put("Com_show_engine_logs", "0");
        VARIABLE_MAP.put("Com_show_engine_mutex", "0");
        VARIABLE_MAP.put("Com_show_engine_status", "0");
        VARIABLE_MAP.put("Com_show_events", "0");
        VARIABLE_MAP.put("Com_show_errors", "0");
        VARIABLE_MAP.put("Com_show_fields", "0");
        VARIABLE_MAP.put("Com_show_function_code", "0");
        VARIABLE_MAP.put("Com_show_function_status", "0");
        VARIABLE_MAP.put("Com_show_grants", "0");
        VARIABLE_MAP.put("Com_show_keys", "0");
        VARIABLE_MAP.put("Com_show_master_status", "0");
        VARIABLE_MAP.put("Com_show_open_tables", "0");
        VARIABLE_MAP.put("Com_show_plugins", "0");
        VARIABLE_MAP.put("Com_show_privileges", "0");
        VARIABLE_MAP.put("Com_show_procedure_code", "0");
        VARIABLE_MAP.put("Com_show_procedure_status", "0");
        VARIABLE_MAP.put("Com_show_processlist", "0");
        VARIABLE_MAP.put("Com_show_profile", "0");
        VARIABLE_MAP.put("Com_show_profiles", "0");
        VARIABLE_MAP.put("Com_show_relaylog_events", "0");
        VARIABLE_MAP.put("Com_show_slave_hosts", "0");
        VARIABLE_MAP.put("Com_show_slave_status", "0");
        VARIABLE_MAP.put("Com_show_status", "1");
        VARIABLE_MAP.put("Com_show_storage_engines", "0");
        VARIABLE_MAP.put("Com_show_table_status", "0");
        VARIABLE_MAP.put("Com_show_tables", "0");
        VARIABLE_MAP.put("Com_show_triggers", "0");
        VARIABLE_MAP.put("Com_show_variables", "0");
        VARIABLE_MAP.put("Com_show_warnings", "0");
        VARIABLE_MAP.put("Com_show_create_user", "0");
        VARIABLE_MAP.put("Com_shutdown", "0");
        VARIABLE_MAP.put("Com_slave_start", "0");
        VARIABLE_MAP.put("Com_slave_stop", "0");
        VARIABLE_MAP.put("Com_group_replication_start", "0");
        VARIABLE_MAP.put("Com_group_replication_stop", "0");
        VARIABLE_MAP.put("Com_stmt_execute", "0");
        VARIABLE_MAP.put("Com_stmt_close", "0");
        VARIABLE_MAP.put("Com_stmt_fetch", "0");
        VARIABLE_MAP.put("Com_stmt_prepare", "0");
        VARIABLE_MAP.put("Com_stmt_reset", "0");
        VARIABLE_MAP.put("Com_stmt_send_long_data", "0");
        VARIABLE_MAP.put("Com_truncate", "0");
        VARIABLE_MAP.put("Com_uninstall_plugin", "0");
        VARIABLE_MAP.put("Com_unlock_tables", "0");
        VARIABLE_MAP.put("Com_update", "0");
        VARIABLE_MAP.put("Com_update_multi", "0");
        VARIABLE_MAP.put("Com_xa_commit", "0");
        VARIABLE_MAP.put("Com_xa_end", "0");
        VARIABLE_MAP.put("Com_xa_prepare", "0");
        VARIABLE_MAP.put("Com_xa_recover", "0");
        VARIABLE_MAP.put("Com_xa_rollback", "0");
        VARIABLE_MAP.put("Com_xa_start", "0");
        VARIABLE_MAP.put("Com_stmt_reprepare", "0");
        VARIABLE_MAP.put("Compression", "OFF");
        VARIABLE_MAP.put("Connection_errors_accept", "0");
        VARIABLE_MAP.put("Connection_errors_internal", "0");
        VARIABLE_MAP.put("Connection_errors_max_connections", "1887944");
        VARIABLE_MAP.put("Connection_errors_peer_address", "9786");
        VARIABLE_MAP.put("Connection_errors_select", "0");
        VARIABLE_MAP.put("Connection_errors_tcpwrap", "0");
        VARIABLE_MAP.put("Connections", "37672739");
        VARIABLE_MAP.put("Created_tmp_disk_tables", "0");
        VARIABLE_MAP.put("Created_tmp_files", "544734");
        VARIABLE_MAP.put("Created_tmp_tables", "0");
        VARIABLE_MAP.put("Delayed_errors", "0");
        VARIABLE_MAP.put("Delayed_insert_threads", "0");
        VARIABLE_MAP.put("Delayed_writes", "0");
        VARIABLE_MAP.put("Flush_commands", "4");
        VARIABLE_MAP.put("Handler_commit", "0");
        VARIABLE_MAP.put("Handler_delete", "0");
        VARIABLE_MAP.put("Handler_discover", "0");
        VARIABLE_MAP.put("Handler_external_lock", "0");
        VARIABLE_MAP.put("Handler_mrr_init", "0");
        VARIABLE_MAP.put("Handler_prepare", "0");
        VARIABLE_MAP.put("Handler_read_first", "0");
        VARIABLE_MAP.put("Handler_read_key", "0");
        VARIABLE_MAP.put("Handler_read_last", "0");
        VARIABLE_MAP.put("Handler_read_next", "0");
        VARIABLE_MAP.put("Handler_read_prev", "0");
        VARIABLE_MAP.put("Handler_read_rnd", "0");
        VARIABLE_MAP.put("Handler_read_rnd_next", "0");
        VARIABLE_MAP.put("Handler_rollback", "0");
        VARIABLE_MAP.put("Handler_savepoint", "0");
        VARIABLE_MAP.put("Handler_savepoint_rollback", "0");
        VARIABLE_MAP.put("Handler_update", "0");
        VARIABLE_MAP.put("Handler_write", "0");
        VARIABLE_MAP.put("Innodb_buffer_pool_dump_status", "Dumping of buffer pool not started");
        VARIABLE_MAP.put("Innodb_buffer_pool_load_status", "Buffer pool(s) load completed at 210513  7:03:58");
        VARIABLE_MAP.put("Innodb_buffer_pool_resize_status", "");
        VARIABLE_MAP.put("Innodb_buffer_pool_pages_data", "8182");
        VARIABLE_MAP.put("Innodb_buffer_pool_bytes_data", "134053888");
        VARIABLE_MAP.put("Innodb_buffer_pool_pages_dirty", "10");
        VARIABLE_MAP.put("Innodb_buffer_pool_bytes_dirty", "163840");
        VARIABLE_MAP.put("Innodb_buffer_pool_pages_flushed", "997852361");
        VARIABLE_MAP.put("Innodb_buffer_pool_pages_free", "0");
        VARIABLE_MAP.put("Innodb_buffer_pool_pages_misc", "9");
        VARIABLE_MAP.put("Innodb_buffer_pool_pages_total", "8191");
        VARIABLE_MAP.put("Innodb_buffer_pool_read_ahead_rnd", "0");
        VARIABLE_MAP.put("Innodb_buffer_pool_read_ahead", "46223723291");
        VARIABLE_MAP.put("Innodb_buffer_pool_read_ahead_evicted", "1032018816");
        VARIABLE_MAP.put("Innodb_buffer_pool_read_requests", "4978300258917");
        VARIABLE_MAP.put("Innodb_buffer_pool_reads", "137232734093");
        VARIABLE_MAP.put("Innodb_buffer_pool_wait_free", "232194868");
        VARIABLE_MAP.put("Innodb_buffer_pool_write_requests", "41750321557");
        VARIABLE_MAP.put("Innodb_data_fsyncs", "392617897");
        VARIABLE_MAP.put("Innodb_data_pending_fsyncs", "0");
        VARIABLE_MAP.put("Innodb_data_pending_reads", "0");
        VARIABLE_MAP.put("Innodb_data_pending_writes", "0");
        VARIABLE_MAP.put("Innodb_data_read", "3006099456250368");
        VARIABLE_MAP.put("Innodb_data_reads", "183476073213");
        VARIABLE_MAP.put("Innodb_data_writes", "1363191352");
        VARIABLE_MAP.put("Innodb_data_written", "31137778848768");
        VARIABLE_MAP.put("Innodb_dblwr_pages_written", "782365065");
        VARIABLE_MAP.put("Innodb_dblwr_writes", "49596759");
        VARIABLE_MAP.put("Innodb_log_waits", "0");
        VARIABLE_MAP.put("Innodb_log_write_requests", "1796373383");
        VARIABLE_MAP.put("Innodb_log_writes", "236844510");
        VARIABLE_MAP.put("Innodb_os_log_fsyncs", "251888391");
        VARIABLE_MAP.put("Innodb_os_log_pending_fsyncs", "0");
        VARIABLE_MAP.put("Innodb_os_log_pending_writes", "0");
        VARIABLE_MAP.put("Innodb_os_log_written", "999708827648");
        VARIABLE_MAP.put("Innodb_page_size", "16384");
        VARIABLE_MAP.put("Innodb_pages_created", "247787803");
        VARIABLE_MAP.put("Innodb_pages_read", "183478011331");
        VARIABLE_MAP.put("Innodb_pages_written", "1056664538");
        VARIABLE_MAP.put("Innodb_row_lock_current_waits", "87");
        VARIABLE_MAP.put("Innodb_row_lock_time", "460995447");
        VARIABLE_MAP.put("Innodb_row_lock_time_avg", "226");
        VARIABLE_MAP.put("Innodb_row_lock_time_max", "51940");
        VARIABLE_MAP.put("Innodb_row_lock_waits", "2037291");
        VARIABLE_MAP.put("Innodb_rows_deleted", "153396454");
        VARIABLE_MAP.put("Innodb_rows_inserted", "23201176664");
        VARIABLE_MAP.put("Innodb_rows_read", "15309780020880");
        VARIABLE_MAP.put("Innodb_rows_updated", "388422625");
        VARIABLE_MAP.put("Innodb_num_open_files", "300");
        VARIABLE_MAP.put("Innodb_truncated_status_writes", "0");
        VARIABLE_MAP.put("Innodb_available_undo_logs", "128");
        VARIABLE_MAP.put("Key_blocks_not_flushed", "0");
        VARIABLE_MAP.put("Key_blocks_unused", "13396");
        VARIABLE_MAP.put("Key_blocks_used", "13396");
        VARIABLE_MAP.put("Key_read_requests", "81695439");
        VARIABLE_MAP.put("Key_reads", "13202325");
        VARIABLE_MAP.put("Key_write_requests", "1727471");
        VARIABLE_MAP.put("Key_writes", "1724899");
        VARIABLE_MAP.put("Last_query_cost", "0.000000");
        VARIABLE_MAP.put("Last_query_partial_plans", "0");
        VARIABLE_MAP.put("Locked_connects", "0");
        VARIABLE_MAP.put("Max_execution_time_exceeded", "0");
        VARIABLE_MAP.put("Max_execution_time_set", "0");
        VARIABLE_MAP.put("Max_execution_time_set_failed", "0");
        VARIABLE_MAP.put("Max_used_connections", "10001");
        VARIABLE_MAP.put("Max_used_connections_time", "2022-06-04 08:54:41");
        VARIABLE_MAP.put("Not_flushed_delayed_rows", "0");
        VARIABLE_MAP.put("Ongoing_anonymous_transaction_count", "0");
        VARIABLE_MAP.put("Open_files", "14");
        VARIABLE_MAP.put("Open_streams", "0");
        VARIABLE_MAP.put("Open_table_definitions", "432");
        VARIABLE_MAP.put("Open_tables", "64");
        VARIABLE_MAP.put("Opened_files", "70698942");
        VARIABLE_MAP.put("Opened_table_definitions", "0");
        VARIABLE_MAP.put("Opened_tables", "0");
        VARIABLE_MAP.put("Performance_schema_accounts_lost", "0");
        VARIABLE_MAP.put("Performance_schema_cond_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_cond_instances_lost", "0");
        VARIABLE_MAP.put("Performance_schema_digest_lost", "2040003551");
        VARIABLE_MAP.put("Performance_schema_file_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_file_handles_lost", "0");
        VARIABLE_MAP.put("Performance_schema_file_instances_lost", "6903");
        VARIABLE_MAP.put("Performance_schema_hosts_lost", "0");
        VARIABLE_MAP.put("Performance_schema_index_stat_lost", "0");
        VARIABLE_MAP.put("Performance_schema_locker_lost", "0");
        VARIABLE_MAP.put("Performance_schema_memory_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_metadata_lock_lost", "0");
        VARIABLE_MAP.put("Performance_schema_mutex_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_mutex_instances_lost", "0");
        VARIABLE_MAP.put("Performance_schema_nested_statement_lost", "0");
        VARIABLE_MAP.put("Performance_schema_prepared_statements_lost", "0");
        VARIABLE_MAP.put("Performance_schema_program_lost", "0");
        VARIABLE_MAP.put("Performance_schema_rwlock_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_rwlock_instances_lost", "0");
        VARIABLE_MAP.put("Performance_schema_session_connect_attrs_lost", "0");
        VARIABLE_MAP.put("Performance_schema_socket_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_socket_instances_lost", "0");
        VARIABLE_MAP.put("Performance_schema_stage_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_statement_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_table_handles_lost", "0");
        VARIABLE_MAP.put("Performance_schema_table_instances_lost", "0");
        VARIABLE_MAP.put("Performance_schema_table_lock_stat_lost", "0");
        VARIABLE_MAP.put("Performance_schema_thread_classes_lost", "0");
        VARIABLE_MAP.put("Performance_schema_thread_instances_lost", "0");
        VARIABLE_MAP.put("Performance_schema_users_lost", "0");
        VARIABLE_MAP.put("Prepared_stmt_count", "0");
        VARIABLE_MAP.put("Qcache_free_blocks", "0");
        VARIABLE_MAP.put("Qcache_free_memory", "0");
        VARIABLE_MAP.put("Qcache_hits", "0");
        VARIABLE_MAP.put("Qcache_inserts", "0");
        VARIABLE_MAP.put("Qcache_lowmem_prunes", "0");
        VARIABLE_MAP.put("Qcache_not_cached", "0");
        VARIABLE_MAP.put("Qcache_queries_in_cache", "0");
        VARIABLE_MAP.put("Qcache_total_blocks", "0");
        VARIABLE_MAP.put("Queries", "5479871678");
        VARIABLE_MAP.put("Questions", "7");
        VARIABLE_MAP.put("Select_full_join", "0");
        VARIABLE_MAP.put("Select_full_range_join", "0");
        VARIABLE_MAP.put("Select_range", "0");
        VARIABLE_MAP.put("Select_range_check", "0");
        VARIABLE_MAP.put("Select_scan", "0");
        VARIABLE_MAP.put("Slave_open_temp_tables", "0");
        VARIABLE_MAP.put("Slow_launch_threads", "9209");
        VARIABLE_MAP.put("Slow_queries", "0");
        VARIABLE_MAP.put("Sort_merge_passes", "0");
        VARIABLE_MAP.put("Sort_range", "0");
        VARIABLE_MAP.put("Sort_rows", "0");
        VARIABLE_MAP.put("Sort_scan", "0");
        VARIABLE_MAP.put("Ssl_accept_renegotiates", "0");
        VARIABLE_MAP.put("Ssl_accepts", "0");
        VARIABLE_MAP.put("Ssl_callback_cache_hits", "0");
        VARIABLE_MAP.put("Ssl_cipher", "");
        VARIABLE_MAP.put("Ssl_cipher_list", "");
        VARIABLE_MAP.put("Ssl_client_connects", "0");
        VARIABLE_MAP.put("Ssl_connect_renegotiates", "0");
        VARIABLE_MAP.put("Ssl_ctx_verify_depth", "0");
        VARIABLE_MAP.put("Ssl_ctx_verify_mode", "0");
        VARIABLE_MAP.put("Ssl_default_timeout", "0");
        VARIABLE_MAP.put("Ssl_finished_accepts", "0");
        VARIABLE_MAP.put("Ssl_finished_connects", "0");
        VARIABLE_MAP.put("Ssl_server_not_after", "");
        VARIABLE_MAP.put("Ssl_server_not_before", "");
        VARIABLE_MAP.put("Ssl_session_cache_hits", "0");
        VARIABLE_MAP.put("Ssl_session_cache_misses", "0");
        VARIABLE_MAP.put("Ssl_session_cache_mode", "NONE");
        VARIABLE_MAP.put("Ssl_session_cache_overflows", "0");
        VARIABLE_MAP.put("Ssl_session_cache_size", "0");
        VARIABLE_MAP.put("Ssl_session_cache_timeouts", "0");
        VARIABLE_MAP.put("Ssl_sessions_reused", "0");
        VARIABLE_MAP.put("Ssl_used_session_cache_entries", "0");
        VARIABLE_MAP.put("Ssl_verify_depth", "0");
        VARIABLE_MAP.put("Ssl_verify_mode", "0");
        VARIABLE_MAP.put("Ssl_version", "");
        VARIABLE_MAP.put("Table_locks_immediate", "5758523");
        VARIABLE_MAP.put("Table_locks_waited", "17");
        VARIABLE_MAP.put("Table_open_cache_hits", "0");
        VARIABLE_MAP.put("Table_open_cache_misses", "0");
        VARIABLE_MAP.put("Table_open_cache_overflows", "0");
        VARIABLE_MAP.put("Tc_log_max_pages_used", "0");
        VARIABLE_MAP.put("Tc_log_page_size", "0");
        VARIABLE_MAP.put("Tc_log_page_waits", "0");
        VARIABLE_MAP.put("Threads_cached", "77");
        VARIABLE_MAP.put("Threads_connected", "908");
        VARIABLE_MAP.put("Threads_created", "528393");
        VARIABLE_MAP.put("Threads_running", "8");
        VARIABLE_MAP.put("Uptime", "54957818");
        VARIABLE_MAP.put("Uptime_since_flush_status", "54957818");
    }

    public static void response(Context c) {
        String charset = c.getCharset();
        ChannelHandlerContext ctx = c.getChannelHandlerContext();

        ByteBuf buffer = ctx.alloc().buffer();
        // write header
        buffer = HEADER.writeBuf(buffer, ctx);
        // write fields
        for (FieldPacket field : FIELDS) {
            buffer = field.writeBuf(buffer, ctx);
        }
        // write eof
        buffer = EOF.writeBuf(buffer, ctx);
        // write rows
        byte packetId = EOF.packetId;

        for (Map.Entry<String, Object> entry : VARIABLE_MAP.entrySet()) {
            String mapKey = entry.getKey();
            Object mapValue = entry.getValue();

            RowDataPacket rowDataPacket = new RowDataPacket(FIELD_COUNT);
            rowDataPacket.add(StringUtil.encodeString(mapKey, charset));
            rowDataPacket.add(StringUtil.encodeString(mapValue != null ? mapValue.toString() : StrUtil.EMPTY, charset));
            rowDataPacket.packetId = ++packetId;
            buffer = rowDataPacket.writeBuf(buffer, ctx);
        }
        // write lastEof
        EOFPacket lastEof = new EOFPacket();
        lastEof.packetId = ++packetId;
        buffer = lastEof.writeBuf(buffer, ctx);
        // write buffer
        ctx.writeAndFlush(buffer);
    }

}
